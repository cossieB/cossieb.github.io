(()=>{"use strict";function e(e){const t=document.createElement("div");t.className="links";const o=document.createElement("a");o.className="git",o.href=e.repo,o.target="_blank",o.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-github" viewBox="0 0 16 16">\n    <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"/>\n  </svg>';const s=document.createElement("a");return s.className="projectLink",s.href=e.external?e.path:`https://cossie-91.web.app${e.path}`,s.target="_blank",s.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-box-arrow-up-right" viewBox="0 0 16 16">\n    <path fill-rule="evenodd" d="M8.636 3.5a.5.5 0 0 0-.5-.5H1.5A1.5 1.5 0 0 0 0 4.5v10A1.5 1.5 0 0 0 1.5 16h10a1.5 1.5 0 0 0 1.5-1.5V7.864a.5.5 0 0 0-1 0V14.5a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h6.636a.5.5 0 0 0 .5-.5z"/>\n    <path fill-rule="evenodd" d="M16 .5a.5.5 0 0 0-.5-.5h-5a.5.5 0 0 0 0 1h3.793L6.146 9.146a.5.5 0 1 0 .708.708L15 1.707V5.5a.5.5 0 0 0 1 0v-5z"/>\n  </svg>',t.appendChild(o),t.appendChild(s),t}function t(e){const{top:t,bottom:o}=e.getBoundingClientRect();t>.75*window.innerHeight||o<.25*window.innerHeight?e.classList.add("hide"):e.classList.remove("hide")}const o="https://cossie-91.web.app/",s=document.getElementById("projects"),n=document.querySelector(":root"),r=document.getElementById("about");[{title:"Meme Machine",img:"screenshots/memes.png",path:"https://mememachine.vercel.app/",external:!0,description:"<p>This is a full-stack CRUD application for posting and viewing memes. I developed it with TypeScript, Next.js, React and SASS.</p> \n        <p>It features an authentication system that I built from the ground up using Json Web Tokens to authenticate users and bcrypt to hash passwords.</p> \n        <p>I used MongoDB Atlas as a database. I also made a MySQL version, the code for which can be viewed on the 'using_mysql' branch of the <a href=\"https://github.com/cossieB/meme-machine\">repo</a>.",stack:["typescript","next.js","react","node.js","mongodb","mongoose","json web token","vercel","mysql","sass"],repo:"https://github.com/cossieB/meme-machine"},{title:"Microservices",img:"screenshots/microservices.png",path:"https://cossie.herokuapp.com/",external:!0,description:"<p>Various REST APIs including header parser, file metadata, British/American English translator, Metric/Imperial converter.</p>\n        <p>I developed this project with TypeScript, Exress.js and MongoDB Atlas. It uses server side rendering and the templating engine I used is Pug.</p> ",stack:["typescript","node.js","expressjs","mongodb","mongoose","pug","heroku"],repo:"https://github.com/cossieB/microservices"},{title:"Internet Games Database",img:"screenshots/igdb.png",path:"https://internet-games-database.vercel.app/",external:!0,description:"<p>This is a CRUD application for adding and viewing information about the games industry. I developed it with TypeScript, Next.js, React, SASS and MongoDB Atlas.</p>\n        <p>In building this project I used advanced React features such as custom hooks and the useReducer hook to manage state</p>\n        ",stack:["typescript","next.js","react","node.js","mongodb","mongoose","vercel","framer motion","sass"],repo:"https://github.com/cossieB/internet-games-database"}].forEach(((t,n)=>{let r=document.createElement("div");r.className=n%2==1?"tile reverse":"tile";let a=document.createElement("img");a.src=`${o}${t.img}`;let l=document.createElement("div");const i=document.createElement("h3");i.textContent=t.title,l.appendChild(i);let c=document.createElement("div");l.appendChild(c),c.innerHTML=t.description;const p=e(t);l.appendChild(p),r.appendChild(l),r.appendChild(a),s.appendChild(r)}));const a=document.getElementById("smallProjects");[{title:"Sudoku",img:"screenshots/sudoku.png",path:"/sudoku",description:"Play sudoku. Features clash highlighting and custom puzzle creator. It can also solve most puzzles using the backtracking algorithm.",stack:["typescript","react","firebase","framer motion"],repo:"https://github.com/cossieB/portfolio/tree/main/src/Components/Sudoku"},{title:"Pomodoro",img:"screenshots/pomodoro.png",path:"/pomodoro",description:"Timer for the pomodoro technique. You can change the session and the break lengths.",stack:["typescript","react","firebase","framer motion"],repo:"https://github.com/cossieB/portfolio/tree/main/src/Components/Pomodoro"},{title:"Calculator",img:"screenshots/calculator.png",path:"/calculator",description:"Non-scientific calculator.",stack:["typescript","react","firebase","framer motion"],repo:"https://github.com/cossieB/portfolio/tree/main/src/Components/Calculator"},{title:"Quiz",path:"/quiz",img:"screenshots/quiz.png",description:"Quiz that tests your mental math skills. High scores stored in Firestore and local storage.",stack:["typescript","react","firebase","framer motion","firestore"],repo:"https://github.com/cossieB/portfolio/tree/main/src/Components/Quiz"},{title:"Memory Game",path:"/memory",img:"/screenshots/memory.png",description:"Quiz that tests your memory. High scores stored in Firestore and local storage.",stack:["typescript","react","firebase","framer motion","firestore"],repo:"https://github.com/cossieB/portfolio/tree/main/src/Components/Memory"},{title:"Random Quote Machine",path:"/quotes",img:"screenshots/quotes.png",description:"Some lighthearted quotes from across the ages.",stack:["typescript","react","firebase","framer motion"],repo:"https://github.com/cossieB/portfolio/tree/main/src/Components/Quotes"},{title:"Markdown Preview",path:"/markdown-preview",img:"screenshots/markdown.png",description:"This neat little tool allows you to type markdown code and instantly see the output. Useful for git README.md files.",stack:["typescript","react","firebase","framer motion","marked"],repo:"https://github.com/cossieB/portfolio/tree/main/src/Components/Markdown"},{title:"Soundboard",img:"screenshots/soundboard.png",path:"/soundboard",description:"Press a button and play a sound. Features a volume slider",stack:["typescript","react","firebase","framer motion"],repo:"https://github.com/cossieB/portfolio/tree/main/src/Components/Soundboard"},{title:"Message Board",path:"/forum",img:"screenshots/forum.png",description:"User interface for a message board. Messages aren't stored.",stack:["typescript","react","firebase","framer motion"],repo:"https://github.com/cossieB/portfolio/tree/main/src/Components/Forum"}].forEach(((t,s)=>{const n=document.createElement("div");n.className="smallTile";const r=document.createElement("img");r.src=`${o}${t.img}`;const l=document.createElement("h3");l.textContent=t.title;const i=e(t),c=document.createElement("div");c.className="mask",n.appendChild(i),n.appendChild(r),n.appendChild(l),n.appendChild(c),n.title=t.description,a.appendChild(n)}));const l=document.querySelector("nav");let i=window.scrollY;document.addEventListener("scroll",(()=>{window.scrollY<i?(l.style.top="0px",window.scrollY>100?l.style.backgroundColor="var(--tertiaryClr)":(l.style.background="none",l.style.color="var(--textClr)")):window.scrollY>100?(l.style.top="-100px",l.style.background="none",l.style.color="var(--textClr)"):l.style.top="0px",i=window.scrollY,t(s),t(a),t(r),t(c)}));const c=document.getElementById("skills");[{language:"TypeScript",logo:"/logos/typescript.png",skill:7},{language:"JavaScript",logo:"/logos/javascript.png",skill:7},{language:"Python",logo:"/logos/python.png",skill:6},{language:"C#",logo:"/logos/csharp.svg",skill:4},{language:"HTML",logo:"/logos/html.png",skill:8},{language:"CSS",logo:"/logos/css.png",skill:6},{language:"React",logo:"/logos/react.png",skill:7},{language:"Next.js",logo:"/logos/next.png",skill:7},{language:"jQuery",logo:"/logos/jquery.png",skill:2},{language:"SASS",logo:"/logos/sass.png",skill:6},{language:"Bootstrap",logo:"/logos/bootstrap.png",skill:5},{language:"Node.JS",logo:"/logos/node.png",skill:7},{language:"ExpressJS",logo:"/logos/express.png",skill:7},{language:"MongoDB",logo:"/logos/mongo.png",skill:6},{language:"Mongoose",logo:"/logos/mongoose.png",skill:6},{language:"MySQL",logo:"/logos/mysql.png",skill:4},{language:"ASP.NET",logo:"/logos/aspnet.jpg",skill:3},{language:"Visual Studio Code",logo:"/logos/vscode.png",skill:8},{language:"Docker",logo:"/logos/docker.png",skill:4},{language:"Git",logo:"/logos/git.png",skill:7},{language:"Firebase",logo:"/logos/firebase.svg",skill:6},{language:"GraphQL",logo:"/logos/graphql.png",skill:5}].forEach((e=>{const t=document.createElement("div");t.className="skillDiv";const s=document.createElementNS("http://www.w3.org/2000/svg","svg");s.setAttribute("title","skill level");const n=document.createElementNS("http://www.w3.org/2000/svg","circle"),r=260-e.skill/10*260,[a,l]=(i=e.skill)>=8?["#00ffea","Excellent"]:i>=6?["springgreen","Good"]:i>=4?["greenyellow","Average"]:i>=2?["yellow","Novice"]:["red","Beginner"];var i;n.setAttribute("stroke-dashoffset",r.toString()),s.setAttribute("stroke",a),s.setAttribute("class","skill"),s.setAttribute("height","100"),s.setAttribute("width","100"),n.setAttribute("cx","50"),n.setAttribute("cy","50"),n.setAttribute("r","40"),s.appendChild(n);const p=document.createElementNS("http://www.w3.org/2000/svg","title");p.textContent=l,s.appendChild(p);const g=document.createElement("img");g.title=e.language,g.src=`${o}${e.logo}`,t.appendChild(g),t.appendChild(s),c.appendChild(t)})),document.querySelector("form").addEventListener("submit",(async e=>{e.preventDefault();const t=document.getElementById("response"),o=document.getElementById("name").value,s=document.getElementById("company").value,n=document.getElementById("email").value,r=document.getElementById("msg").value,a=await fetch("https://cossie.herokuapp.com/api/email",{method:"POST",body:JSON.stringify({name:o,company:s,email:n,msg:r}),headers:{"Content-Type":"application/json"}}),l=await a.json();t.classList.toggle("show"),l.status?(t.style.color="springgreen",t.innerText="Thank you, your message has been sent successfully! I will get back to you as soon as possible."):(t.style.color="red",t.textContent="Something went wrong."),t.style.fontSize="1.25rem",t.style.textAlign="center",setTimeout((()=>{t.classList.toggle("show")}),3500)})),document.getElementById("lightDarkToggle").onclick=function(){const e=getComputedStyle(n),t=e.getPropertyValue("--clr1"),o=e.getPropertyValue("--clr2"),s=e.getPropertyValue("--clr3"),r=e.getPropertyValue("--clr4"),a=(e.getPropertyValue("--clr5"),e.getPropertyValue("--clr6"),e.getPropertyValue("--mode"));console.log(a),"dark"==a?(n.style.setProperty("--textClr",t),n.style.setProperty("--bgClr",o),n.style.setProperty("--clrInfo",r),n.style.setProperty("--tertiaryClr",s),n.style.setProperty("--mode","light")):(n.style.setProperty("--textClr",o),n.style.setProperty("--bgClr",t),n.style.setProperty("--clrInfo",s),n.style.setProperty("--tertiaryClr","black"),n.style.setProperty("--mode","dark"))}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,